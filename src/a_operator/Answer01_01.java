package a_operator;

/**
 * 【演算子】
 * 下記の例では、コンソールに計算式と加算した結果を表示しています。
 * 同様に「減算」「乗算」「除算」「剰余」の計算式と結果をコンソールに表示してみましょう。
 *
 * 01_Java言語に触れる　の記述内容もここにコメントしています。
 *
 */
/* ↓クラス：プログラムの名前（第4章で詳しく学習）アルファベットと数字の組み合わせで好きな名前を使えます。
　 ただし、いくつか注意点があります。慣習として頭文字はアルファベットの大文字。（例えば、exampleではなくExampleにします）
クラス名の中には空行が入ってはいけません。First Exampleのように2つ以上の単語でクラス名をつけたい場合には、2つをつなげてFirstExampleという名前にします。*/
public class Answer01_01 {  //←クラスを定義するブロックです。プログラム全体を囲むブロックと思ってください。

//	②プログラムの入口：
//	プログラムが実行されるときには、以下1行が入り口となり、ブロックに含まれる命令が最初に実行されます（これに続く{}の中にある命令文が実行されます。） （メソッドについて詳しくは第5章）
	public static void main(String[] args) {  //メソッドを定義するブロックです。メソッドとは、コンピュータに実行させる命令文をまとめたものです。 mainという単語がメソッドの名前にあたります。

//		③命令文：
//		命令文は一つだけでなく、いくつでも入れることができます。また、命令文は原則としてプログラムコードの上から下に向かって順に実行されます。

		int num = 3;
		int result = 0;

		//加算
		result = 6 + num;
		System.out.println(6 + "+" + num + "=" + result);
//		命令文の末尾にはセミコロンを必ずつけます。　　　↑セミコロンが命令文と命令文の区切りになるからです。
//		一方で、1つの命令文の任意の場所に空白や改行を入れても問題ありません。

		//減算
		result = 6 - num;
		System.out.println(6 + "-" + num + "=" + result);

		//乗算
		result = 6 * num;
		System.out.println(6 + "*" + num + "=" + result);

		//除算
		result = 6 / num;
		System.out.println(6 + "/" + num + "=" + result);

		//剰余　　%は割り算を行った結果の「余り」
		result = 6 % num;
		System.out.println(6 + "%" + num + "=" + result);


/**
空白：
単語と単語の間には必ず空白や改行が必要、それ以外にもコードを読みやすくするために改行を入れることも。1つの単語の中に空白や改行を入れては×
もう1つ大切なこととして、Java言語のプログラムコードは大文字と小文字が厳密に区別されます。「class」を「Class」などと書いてはいけません。
以上を踏まえ、基本的なルールをまとめておきます。

基本ルール
命令文の末尾にはセミコロン(;)をつける
空白や改行は(単語を区切られない限り)好きな場所に入れてかまわない
プログラムコードの中の大文字と小文字を区別される。

インデントについて：ブロックの始まり終わりを分かりやすくするため、適切な数の空白を行の先頭に入れるようにします。
このように、行頭に空白を入れて字下げする事を インデントといいます。
*/

	}
}
//←クラスを定義するブロック（閉じ）



/**
 * コメント文には日本語も使えます。
 * プログラムコードの中に「 ／／ 」という記号を書くと、その後ろにコメント文を1行書くことができま す。
 * 1行ではなく複数行のコメント文を書きたいときには、コメント文をと「 ／* 」と「 *／ 」で囲みます。
 * コメント文はコンパイラに無視されます。 そのためプログラムの動作には何も影響を与えません。
 * まとめ
 * プログラムコードは｛｝で囲まれた複数のブロックから構成されます
 * ブロックの中にブロックを入れることができます（ブロックのネスト）
 * コメント文や行頭の空白をいれることで、プログラムコードを理解しやすくできます */

